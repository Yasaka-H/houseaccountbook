{"remainingRequest":"/Users/yasaka/Git-Project/Kakeibo/houseaccountbook/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yasaka/Git-Project/Kakeibo/houseaccountbook/src/components/ListBoard.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yasaka/Git-Project/Kakeibo/houseaccountbook/src/components/ListBoard.vue","mtime":1560781710000},{"path":"/Users/yasaka/Git-Project/Kakeibo/houseaccountbook/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yasaka/Git-Project/Kakeibo/houseaccountbook/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yasaka/Git-Project/Kakeibo/houseaccountbook/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yasaka/Git-Project/Kakeibo/houseaccountbook/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport axios from 'axios'\n\nimport AddList from './parts/AddList.vue'\nexport default {\n    name: \"ListBoard\",\n    data() {\n        return {\n            inOutList: [],\n            loading: true,\n            errored: false,\n            id: ''\n        }\n    },\n    components:{\n        AddList\n    },\n    mounted() {\n        axios.get('http://localhost:4567/get_all')\n            .then(\n                response=>{\n                    this.inOutList = response.data\n                }\n            ).catch(\n                error =>{\n                    alert(error)\n                    this.errored = true\n                }\n        )\n\n    },\n    methods: {\n        reloadList() {\n            axios.get('http://localhost:4567/get_all')\n                .then(\n                    response=>{\n                        this.inOutList = response.data\n                    }\n                ).catch(\n                error =>{\n                    alert(error)\n                    this.errored = true\n                }\n            )\n        },\n        deleteList: function(id) {\n            alert(id)\n            axios.delete('http://localhost:4567/delete?id=' + id)\n                .then(\n                    response => {\n                        alert('This delete is '+ response.data)\n                    }\n                )\n        }\n    }\n}\n",{"version":3,"sources":["ListBoard.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkDA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ListBoard.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div>\n        <div>\n            <h3>Attention!!!</h3>\n            <p>未完成です。入力フォームへの正しくない入力などを弾く機能は実装していません。優しく使ってあげてください</p>\n            <ul>\n                実装済み機能\n                <li>初期、データベースをサーバーから取得、クライアントで表示</li>\n                <li>データベースへの登録(自動でリストはリロードされません)</li>\n                <li>リスト表示のリロード</li>\n                <li>削除機能はボタンだけ実装で中身はありません</li>\n            </ul>\n        </div>\n        <el-button type=\"primary\" round @click=\"reloadList\"> RELOAD</el-button>\n\n        <template>\n            <el-table\n                    :data=\"inOutList\"\n                    style=\"width: 100%\">\n                <el-table-column\n                        prop=\"date\"\n                        label=\"Date\"\n                        width=\"180\"></el-table-column>\n                <el-table-column\n                        prop=\"category\"\n                        label=\"Category\"\n                        width=\"180\"></el-table-column>\n                <el-table-column\n                        prop=\"item\"\n                        label=\"Item\"\n                        width=\"180\"></el-table-column>\n                <el-table-column\n                    prop=\"price\"\n                    label=\"Price\"\n                    width=\"180\"></el-table-column>\n                <el-table-column\n                    prop=\"discription\"\n                    label=\"Discription\"\n                    width=\"180\"></el-table-column>\n                <el-table-column label=\"Delete\" prop=\"id\" width=\"80\" >\n\n                    <el-button type=\"danger\" icon=\"el-icon-delete\" circle @click.native.prevent=\"deleteList(id)\"></el-button>\n                </el-table-column>\n            </el-table>\n        </template>\n    <AddList />\n    </div>\n</template>\n\n<script>\n    import axios from 'axios'\n\n    import AddList from './parts/AddList.vue'\n    export default {\n        name: \"ListBoard\",\n        data() {\n            return {\n                inOutList: [],\n                loading: true,\n                errored: false,\n                id: ''\n            }\n        },\n        components:{\n            AddList\n        },\n        mounted() {\n            axios.get('http://localhost:4567/get_all')\n                .then(\n                    response=>{\n                        this.inOutList = response.data\n                    }\n                ).catch(\n                    error =>{\n                        alert(error)\n                        this.errored = true\n                    }\n            )\n\n        },\n        methods: {\n            reloadList() {\n                axios.get('http://localhost:4567/get_all')\n                    .then(\n                        response=>{\n                            this.inOutList = response.data\n                        }\n                    ).catch(\n                    error =>{\n                        alert(error)\n                        this.errored = true\n                    }\n                )\n            },\n            deleteList: function(id) {\n                alert(id)\n                axios.delete('http://localhost:4567/delete?id=' + id)\n                    .then(\n                        response => {\n                            alert('This delete is '+ response.data)\n                        }\n                    )\n            }\n        }\n    }\n</script>\n\n<style scoped>\n\n</style>"]}]}